syntax = "proto3";

package proto;

option go_package = "github.com/mp1947/ya-url-shortener/internal/proto";

message ShortenURLReq {
  string url = 1 [json_name = "url"];
}

message ShortenURLResp {
  string shortURL = 1 [json_name = "short_url"];
  string jwtToken = 2 [json_name = "jwt_token"];
}

message BatchShortenReq {
  message BatchShorten {
    string correlationID = 1 [json_name = "correlation_id"];
    string originalURL = 2 [json_name = "original_url"];
  }
  repeated BatchShorten batchShortenData = 1 [json_name = "batch_shorten_data"];
}

message BatchShortenResp {
  message BatchShorten {
    string correlationID = 1 [json_name = "correlation_id"];
    string shortURL = 2 [json_name = "short_url"];
  }
  repeated BatchShorten batchShortenData = 1 [json_name = "batch_shorten_data"];
  string jwtToken = 2 [json_name = "jwt_token"];
}

message GetOriginalURLByShortReq {
  string shortURL = 1 [json_name = "short_url"];
}

message GetOriginalURLByShortResp {
  string originalURL = 1 [json_name = "original_url"];
}

message GetUserURLSResp {
  message UserURL {
    string shortURL = 1 [json_name = "short_url"];
    string originalURL = 2 [json_name = "original_url"];
  }
  repeated UserURL userURLs = 1 [json_name = "user_urls"];
}

message Empty {}

message DeleteURLSReq {
  repeated string shortURLs = 1 [json_name = "short_urls"];
}

message DeleteURLSResp {
  string status = 1 [json_name = "deleted_short_urls"];
}

service Shortener {
  rpc ShortenURL(ShortenURLReq) returns (ShortenURLResp);
  rpc BatchShortenURL(BatchShortenReq) returns (BatchShortenResp);
  rpc GetOriginalURLByShort(GetOriginalURLByShortReq) returns (GetOriginalURLByShortResp);
  rpc GetUserURLS(Empty) returns (GetUserURLSResp);
  rpc DeleteUserURLS(DeleteURLSReq) returns (DeleteURLSResp);
}